/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package TimeNMoney;


import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;

/**
 *
 * @author Ivo.Oliveira
 */
@SuppressWarnings("serial")
public class Alterar_perfil extends javax.swing.JFrame {
    Funcionario funcionario;
    boolean auto_log;
    boolean save_log;
    Image foto_nova;
    boolean foto_eliminada;
    /**
     * Creates new form Alterar_perfil
     * @param f
     * @param auto_log
     * @param save_log
     */
    public Alterar_perfil(Funcionario f, boolean auto_log,boolean save_log) {
        this.funcionario = f;
        this.auto_log = auto_log;
        this.save_log = save_log;
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("odkas.tnm.png")));
        preencher_campos(this.funcionario);
        username_field.setEditable(false);
    }
    
    private void preencher_campos(Funcionario f){
        nome_field.setText(f.get_nome());
        username_field.setText(f.get_username());
        contacto_ao_field.setText(f.get_phone_ao());
        contacto_pt_field.setText(f.get_phone_pt());
        contacto_sk_lq_field.setText(f.get_id_skype());
        mail_field.setText(f.get_mail());
        date_field.setDate(f.get_nascimento());
        if (f.get_foto()!=null){
        	BufferedImage foto = arrayToImage(f.get_foto());
        	ImageIcon icon = new ImageIcon(resize(foto,100,100));
        	label_foto.setIcon(icon);
        	this.foto_nova = null;
        	foto_eliminada = false;
        	eliminar_foto_botao.setVisible(true);
        }
        else{
        	label_foto.setIcon(new ImageIcon(Alterar_perfil.class.getResource("/TimeNMoney/no_image_icon.png")));
        	eliminar_foto_botao.setVisible(false);
        }
    }
    
    private BufferedImage arrayToImage(byte[] foto){
    	ByteArrayInputStream bais = new ByteArrayInputStream(foto);
    	try {
			BufferedImage image = ImageIO.read(bais);
			return image;
		} catch (IOException e) {
			e.printStackTrace();
            this.setCursor(Cursor.getDefaultCursor());
            new Log_erros_class().write_log_to_file(this.funcionario.get_username(),e);
			return null;
		}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nome_field = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        username_field = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        contacto_pt_field = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        contacto_ao_field = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        mail_field = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        contacto_sk_lq_field = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        date_field = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        pass_antiga = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        pass_nova = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        pass_confirma = new javax.swing.JPasswordField();
        gravar_botao = new javax.swing.JButton();
        cancelar_botao = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ODKAS - Time &  Money");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TimeNMoney/profile_icon.png"))); // NOI18N
        jLabel1.setText("Alterar Perfil");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados utilizador"));

        jLabel2.setText("Nome:");

        jLabel3.setText("Username:");

        jLabel4.setText("Telemóvel (PT):");

        jLabel5.setText("Telemóvel (AO):");

        jLabel6.setText("Email:");

        jLabel7.setText("ID skype/Lync:");

        jLabel8.setText("Data de nascimento:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nome_field)
                    .addComponent(username_field)
                    .addComponent(contacto_pt_field)
                    .addComponent(contacto_ao_field)
                    .addComponent(mail_field)
                    .addComponent(contacto_sk_lq_field)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(date_field, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 217, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nome_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(username_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contacto_pt_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contacto_ao_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mail_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contacto_sk_lq_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(date_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Alterar Password"));

        jLabel9.setText("Password antiga:");

        jLabel10.setText("Nova password:");

        jLabel11.setText("Confirmar password:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(277, 277, 277))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pass_antiga)
                            .addComponent(pass_nova)
                            .addComponent(pass_confirma))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pass_antiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pass_nova, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pass_confirma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        gravar_botao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TimeNMoney/saveicon.png"))); // NOI18N
        gravar_botao.setText("Gravar");
        gravar_botao.setMaximumSize(new java.awt.Dimension(120, 40));
        gravar_botao.setMinimumSize(new java.awt.Dimension(120, 40));
        gravar_botao.setPreferredSize(new java.awt.Dimension(120, 40));
        gravar_botao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gravar_botaoActionPerformed(evt);
            }
        });

        cancelar_botao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TimeNMoney/Cancel-icon.png"))); // NOI18N
        cancelar_botao.setText("Cancelar");
        cancelar_botao.setMaximumSize(new java.awt.Dimension(120, 40));
        cancelar_botao.setMinimumSize(new java.awt.Dimension(120, 40));
        cancelar_botao.setPreferredSize(new java.awt.Dimension(120, 40));
        cancelar_botao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar_botaoActionPerformed(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TimeNMoney/logo-timemoney2.png"))); // NOI18N
        panel = new JPanel();
        panel.setBorder(new TitledBorder(null, "Foto", TitledBorder.LEADING, TitledBorder.TOP, null, null));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(20)
        					.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 400, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED, 29, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addContainerGap(20, Short.MAX_VALUE)
        					.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.UNRELATED)))
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(jLabel12)
        							.addPreferredGap(ComponentPlacement.RELATED, 82, Short.MAX_VALUE))
        						.addGroup(layout.createSequentialGroup()
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(gravar_botao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)))
        					.addComponent(cancelar_botao, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        							.addPreferredGap(ComponentPlacement.UNRELATED)
        							.addComponent(panel, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        						.addComponent(jPanel2, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        					.addGap(3)))
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel1)
        					.addGap(15)
        					.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel12)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(panel, GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(cancelar_botao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(gravar_botao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(20))))
        );
        label_foto = new JLabel("FOTO");
        label_foto.setIcon(new ImageIcon(Alterar_perfil.class.getResource("/TimeNMoney/no_image_icon.png")));
        label_name = new JLabel("");
        botao_esc_foto = new JButton("Escolher");
        botao_esc_foto.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		choose_foto_action();
        	}
        });
        
        eliminar_foto_botao = new JButton("Eliminar");
        eliminar_foto_botao.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		eliminar_foto_action();
        	}
        });
        GroupLayout gl_panel = new GroupLayout(panel);
        gl_panel.setHorizontalGroup(
        	gl_panel.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_panel.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(label_foto, GroupLayout.PREFERRED_SIZE, 102, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_panel.createParallelGroup(Alignment.TRAILING)
        				.addGroup(Alignment.LEADING, gl_panel.createSequentialGroup()
        					.addComponent(botao_esc_foto)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(eliminar_foto_botao))
        				.addComponent(label_name, GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
        			.addContainerGap())
        );
        gl_panel.setVerticalGroup(
        	gl_panel.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_panel.createSequentialGroup()
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        			.addGroup(gl_panel.createParallelGroup(Alignment.TRAILING)
        				.addGroup(gl_panel.createSequentialGroup()
        					.addComponent(label_foto, GroupLayout.PREFERRED_SIZE, 102, GroupLayout.PREFERRED_SIZE)
        					.addGap(35))
        				.addGroup(gl_panel.createSequentialGroup()
        					.addComponent(label_name, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
        					.addGap(9)
        					.addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)
        						.addComponent(botao_esc_foto)
        						.addComponent(eliminar_foto_botao))
        					.addGap(45))))
        );
        panel.setLayout(gl_panel);
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("deprecation")
	private void gravar_botaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravar_botaoActionPerformed
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        int alter = detetar_alteracoes();
        int res_fields = 0;
        if (alter>0){
        	res_fields = change_funcionario_bd(this.funcionario);
//            if (res==0)
//                JOptionPane.showMessageDialog(null, "Alterações efectuadas com sucesso!");
        }
        int res_pass = alterar_pass(this.funcionario.get_username());
        if (res_fields==0 && res_pass==0){
        	JOptionPane.showMessageDialog(null, "Alterações efectuadas com sucesso!");
        	go_back_new_data();
        }
        else if (res_fields == 0 && res_pass != 0){
        	boolean b1 = (pass_antiga.getText().equals(""));
        	boolean b2 = (pass_nova.getText().equals(""));
        	boolean b3 = (pass_confirma.getText().equals(""));
        	if (b1 && b2 && b3)
        	{
            	JOptionPane.showMessageDialog(null, "Alterações efectuadas com sucesso!");
            	go_back_new_data();
            }
        }
        this.setCursor(Cursor.getDefaultCursor());
    }//GEN-LAST:event_gravar_botaoActionPerformed

    private void go_back_new_data(){
        new Menu_inicial_utilizador(this.funcionario,this.auto_log,this.save_log).setVisible(true);
        this.dispose();
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null); 
    }//GEN-LAST:event_formWindowOpened

    private void cancelar_botaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar_botaoActionPerformed
        go_back_new_data();
    }//GEN-LAST:event_cancelar_botaoActionPerformed

    @SuppressWarnings("deprecation")
	private int alterar_pass(String username){
        String old = get_old_pass();
        String pass_ant = pass_antiga.getText();
        String pass_nva = pass_nova.getText();
        String pass_cnf = pass_confirma.getText();
        
        if (!pass_ant.equals("") && !pass_nva.equals("") && !pass_cnf.equals("")){
            //confirmar passwords
            if (old.equals(pass_ant)){
                if (pass_nva.equals(pass_cnf)){
                    //do it
                    int i = change_pass_bd(username,pass_nva);
                    if (i==0)
                        return 0;
                    else
                        return 1;
                }
                else{
                    JOptionPane.showMessageDialog(null, "Password de confirmação tem que ser igual à password nova!");
                    pass_confirma.setText("");
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Password antiga incorrecta!");
                pass_antiga.setText("");
            }
        }
        else{
            if (pass_ant.equals("") && !pass_nva.equals("") && !pass_cnf.equals("")){
                JOptionPane.showMessageDialog(null, "Tem que preencher o campo da palavra pass antiga!");
            }
            else if (!pass_ant.equals("") && pass_nva.equals("") && !pass_cnf.equals("")){
                JOptionPane.showMessageDialog(null, "Tem que preencher o campo da palavra pass nova!");
            }
            else if (!pass_ant.equals("") && !pass_nva.equals("") && pass_cnf.equals("")){
                JOptionPane.showMessageDialog(null, "Tem que preencher o campo da palavra pass de confirmação!");
            }
            else if (pass_ant.equals("") && pass_nva.equals("") && pass_cnf.equals("")){
                //JOptionPane.showMessageDialog(null, "Tem que preencher o campo da palavra pass antiga!");
            }
            else{
                JOptionPane.showMessageDialog(null, "Tem que preencher todos os campos de palavras pass!");
            }
        }
        return 1;
    }
    
    private int change_pass_bd(String username, String pass){
        try{
        	byte[] pass_b = set_password(pass);
	        Connection con = (new Connection_bd(this.funcionario.get_username())).get_connection();
	        PreparedStatement ps;
	        String sql;
	        sql = "update tnm_enc_logb set username=?, password=? where username=?";
	        ps=con.prepareStatement(sql);
	        ps.setString(1, this.funcionario.get_username());
	        ps.setBytes(2, pass_b);
	        ps.setString(3, username);
	        ps.executeUpdate();
	        
	        ps.close();
	        con.close();
//	        String defaultFolder = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();
	        String defaultFolder = System.getenv("APPDATA");
	        String name_file = defaultFolder + "\\TimeNMoney\\data\\log_file.sav";
	        File log_file = new File(name_file);
	        if (log_file.exists())
	            log_file.delete();
	        }
        catch(SQLException e)
        {
            e.printStackTrace();
            this.setCursor(Cursor.getDefaultCursor());
            new Log_erros_class().write_log_to_file(this.funcionario.get_username(),e);
            return 1;
        }
        return 0;
    }
    
    private static byte[] set_password(String text){
    	try {
         	 String key = "491massaIvo51765"; // 128 bit key
	         SecretKeySpec aesKey = new SecretKeySpec(key.getBytes(), "AES");
	         Cipher cipher = Cipher.getInstance("AES");
	         cipher.init(Cipher.ENCRYPT_MODE, aesKey);
	         byte[] encrypted = cipher.doFinal(text.getBytes());
	         return encrypted;
	     }catch(Exception e) {
	         return null;
	     }
    }

    
    private int change_funcionario_bd(Funcionario f){
        try{
        Connection con = (new Connection_bd(this.funcionario.get_username())).get_connection();
        PreparedStatement ps;
        String sql;
        sql = "update tnm_funcionario set nome=?, telemovel_pt=?, telemovel_ao=?, mail=?, admin=?, skype=?, data_nascimento=?, foto=? where username=?";
        ps=con.prepareStatement(sql);
        ps.setString(1, f.get_nome());
        ps.setString(2, f.get_phone_pt());
        ps.setString(3, f.get_phone_ao());
        ps.setString(4, f.get_mail());
        int ad_int = 0;
        if (f.get_admin())
            ad_int = 1;
        ps.setInt(5, ad_int);
        ps.setString(6, f.get_id_skype());
        Date d = f.get_nascimento();
        java.sql.Date data_aux = null;
        if (d!=null)
            data_aux = new java.sql.Date(d.getTime());
        
        ps.setDate(7, data_aux);
        //foto
        ps.setBytes(8, f.get_foto());
        ps.setString(9, f.get_username());
        ps.executeUpdate();
        
        ps.close();
        con.close();
        }
        catch(SQLException e)
        {
            e.printStackTrace();
            this.setCursor(Cursor.getDefaultCursor());
            new Log_erros_class().write_log_to_file(this.funcionario.get_username(),e);
            return 1;
        }
        return 0;
    }
    
    private byte[] imageToByte(Image image) {      
        if(image !=null){
	        BufferedImage bi = new BufferedImage(image.getWidth(null),image.getHeight(null),BufferedImage.TYPE_INT_RGB);  
	        Graphics bg = bi.getGraphics();  
	        bg.drawImage(image, 0, 0, null);  
	        bg.dispose();  
	          
	        ByteArrayOutputStream buff = new ByteArrayOutputStream();         
	        try {    
	            ImageIO.write(bi, "JPG", buff);    
	        } catch (IOException e) {    
	            e.printStackTrace();  
	            this.setCursor(Cursor.getDefaultCursor());
	            new Log_erros_class().write_log_to_file(this.funcionario.get_username(),e);
	        }    
	        return buff.toByteArray();  
        }
        else{
        	return null;
        }
    }  
    
    private String get_old_pass(){
        String ret = "";
        byte[] pass_b = null;
        try{
        Connection con = (new Connection_bd(this.funcionario.get_username())).get_connection();
        PreparedStatement ps;
        String sql;
        sql = "select * from tnm_enc_logb where username=?";
        ps=con.prepareStatement(sql);
        ps.setString(1, this.funcionario.get_username());
        ResultSet rs = ps.executeQuery();
        while (rs.next())
            pass_b = rs.getBytes("PASSWORD");
        ret = get_password(pass_b);
        ps.close();
        con.close();
        }
        catch(SQLException e)
        {
            e.printStackTrace();
            this.setCursor(Cursor.getDefaultCursor());
            new Log_erros_class().write_log_to_file(this.funcionario.get_username(),e);
        }
        return ret;
    }
    
    private static String get_password(byte[] password){	    	
	    try {
	    	String key = "491massaIvo51765"; // 128 bit key
	        SecretKeySpec aesKey = new SecretKeySpec(key.getBytes(), "AES");
	        Cipher cipher = Cipher.getInstance("AES");
	        cipher.init(Cipher.ENCRYPT_MODE, aesKey);
	        cipher.init(Cipher.DECRYPT_MODE, aesKey);
	        String decrypted = new String(cipher.doFinal(password));
	        return decrypted;
	    }catch(Exception e) {
	        return "";
	    }
    }

    
    private int detetar_alteracoes(){
        int cont = 0;
        
        if (!nome_field.getText().equals(this.funcionario.get_nome())){
            cont++;
            this.funcionario.set_nome(nome_field.getText());
        }
        if (!mail_field.getText().equals(this.funcionario.get_mail())){
            cont++;
            this.funcionario.set_mail(mail_field.getText());
        }
        if (!contacto_pt_field.getText().equals(this.funcionario.get_phone_pt())){
            cont++;
            this.funcionario.set_phone_pt(contacto_pt_field.getText());
        }
        if (!contacto_ao_field.getText().equals(this.funcionario.get_phone_ao())){
            cont++;
            this.funcionario.set_phone_ao(contacto_ao_field.getText());
        }
        if (!contacto_sk_lq_field.getText().equals(this.funcionario.get_id_skype())){
            cont++;
            this.funcionario.set_id_skype(contacto_sk_lq_field.getText());
        }
        
        Date data_antiga = this.funcionario.get_nascimento();
        Date data_nova = date_field.getDate();
        
        if ((data_antiga==null && data_nova!=null) || (data_antiga!=null && data_nova==null))
        {
            this.funcionario.set_nascimento(data_nova);
            cont++;
        }
        else if (data_antiga!=null && data_nova!=null)
        {
            if (!data_antiga.equals(data_nova))
            {
                cont++;
                this.funcionario.set_nascimento(data_nova);
            }
        }
        
        //foto
        if (this.foto_nova != null || foto_eliminada == true)
        {
        	cont++;
        	byte[] f_nova = imageToByte(this.foto_nova);
        	this.funcionario.set_foto(f_nova);
        }
        
        
        return cont;
    }
    
    private void choose_foto_action(){
    	String path = "";
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Escolha fotografia");
        FileFilter imageFilter = new FileNameExtensionFilter(
        	    "Imagens", ImageIO.getReaderFileSuffixes());
        chooser.setFileFilter(imageFilter);
        int esc = chooser.showSaveDialog(this);
        if (esc==JFileChooser.APPROVE_OPTION){
            File ficheirorecebido = chooser.getSelectedFile();
            path = ficheirorecebido.getAbsolutePath();
        
            //fim chooser
            if (!path.equals(""))
            	label_name.setText("<html>" + ficheirorecebido.getName() + "</html>");
            if (ficheirorecebido != null)
            {
            	try {
					BufferedImage img = ImageIO.read(ficheirorecebido);
					ImageIcon icon = new ImageIcon(resize(img,100,100));
					label_foto.setIcon(icon);
					this.foto_nova = img;
				} catch (IOException e) {
					e.printStackTrace();
		            this.setCursor(Cursor.getDefaultCursor());
		            new Log_erros_class().write_log_to_file(this.funcionario.get_username(),e);
				}
            	eliminar_foto_botao.setVisible(true);
            }
        }   
    }
    
    private static BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }
    
    private void eliminar_foto_action(){
    	this.funcionario.set_foto(null);
    	label_foto.setIcon(new ImageIcon(Alterar_perfil.class.getResource("/TimeNMoney/no_image_icon.png")));
    	label_name.setText("");
    	this.foto_eliminada = true;
    	this.foto_nova = null;
    	eliminar_foto_botao.setVisible(false);
    }
    
    public Funcionario get_funcionario_return(){
    	return this.funcionario;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelar_botao;
    private javax.swing.JTextField contacto_ao_field;
    private javax.swing.JTextField contacto_pt_field;
    private javax.swing.JTextField contacto_sk_lq_field;
    private com.toedter.calendar.JDateChooser date_field;
    private javax.swing.JButton gravar_botao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField mail_field;
    private javax.swing.JTextField nome_field;
    private javax.swing.JPasswordField pass_antiga;
    private javax.swing.JPasswordField pass_confirma;
    private javax.swing.JPasswordField pass_nova;
    private javax.swing.JTextField username_field;
    private JPanel panel;
    private JLabel label_foto;
    private JLabel label_name;
    private JButton botao_esc_foto;
    private JButton eliminar_foto_botao;
}
