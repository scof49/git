/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package TimeNMoney;

import java.awt.Toolkit;
import java.util.TreeMap;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JPanel;
import javax.swing.JCheckBox;

import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;

/**
 *
 * @author Ivo.Oliveira
 */
@SuppressWarnings("serial")
public class Adicionar_tarefa_a_projecto extends javax.swing.JFrame {
    Projecto proj;
    TreeMap<String,Tarefa> lista_tarefas_projecto;
    TreeMap<String,Tarefa> lista_tarefas_projecto_not;
    boolean novo;
    Data_manager dm;
    
    public Adicionar_tarefa_a_projecto(Projecto proj, TreeMap<String,Tarefa> lista_tarefas, Data_manager dm) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("odkas.tnm.png")));
        this.proj = proj;
        this.lista_tarefas_projecto = new TreeMap<>(proj.get_tarefas());
        calc_tarefas_not_in_proj(lista_tarefas);
        client_label.setText(proj.get_cliente().get_nome());
        proj_label.setText(proj.get_codigo() + " - "+ proj.get_nome());
        set_lista_tarefas();
        this.novo = true;
        this.dm = dm;
        set_id_auto();
        lista_tarefas_nao_ass_field.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent lse) {
               
            	change_panel();
            }
        });
    }
    
    private void set_id_auto(){
    	int max = 0;
    	String pesquisa = "usr"+this.dm.get_id_user_tarefa()+"trf";
    	for (String s : this.dm.lista_tarefa_total.keySet())
    	{
    		if (s.contains(pesquisa))
    		{
    			String resto = s.replace(pesquisa, "");
    			int id_resto = 0;
    			try{
    				id_resto = Integer.parseInt(resto);
    			}
    			catch(NumberFormatException ex){
    				ex.printStackTrace();
    				id_resto = 0;
    			}
    			if (id_resto>max)
    				max = id_resto;
    		}
    	}
    	max++;
    	String id = pesquisa;
    	if (max<10)
    		id+="000"+max;
    	else if (max<100)
    		id+="00"+max;
    	else if (max<1000)
    		id+="0"+max;
    	else
    		id+=max;
    	id_field.setText(id);
    }
    
    private void change_panel(){
        try{
        nova_btn.setEnabled(true);
        String s = lista_tarefas_nao_ass_field.getSelectedValue().toString();
//        String id_aux = s.split(" - ")[0];
//        Tarefa t = this.lista_tarefas_projecto_not.get(id_aux);
        Tarefa t = this.lista_tarefas_projecto_not.get(s);
        id_field.setText(t.get_id());
        nome_field.setText(t.get_nome());
        descricao_field.setText(t.get_descricao());
        this.novo = false;
        }
        catch(Exception e)
        {
//        e.printStackTrace();
//        new Log_erros_class().write_log_to_file(this.dm.username, e.getMessage());
        }
    }
    
    @SuppressWarnings({ "rawtypes", "unchecked" })
	private void set_lista_tarefas()
    {
        DefaultListModel dlm = new DefaultListModel();
        for (Tarefa t : this.lista_tarefas_projecto_not.values())
            dlm.addElement(t.get_nome());
//           dlm.addElement(t.get_id() + " - " + t.get_nome());
        
        this.lista_tarefas_nao_ass_field.setModel(dlm);
    }
    
    private void calc_tarefas_not_in_proj(TreeMap<String,Tarefa> lista){
        this.lista_tarefas_projecto_not = new TreeMap<>();
        for (Tarefa t : lista.values())
        {
        	String s = t.get_nome();
            if (!this.lista_tarefas_projecto.containsKey(s))
//                this.lista_tarefas_projecto_not.put(t.get_id(), lista.get(t.get_id()));
            	this.lista_tarefas_projecto_not.put(t.get_nome(), lista.get(t.get_id()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    @SuppressWarnings("rawtypes")
	private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id_field = new javax.swing.JTextField();
        nome_field = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descricao_field = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        proj_label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista_tarefas_nao_ass_field = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        cancel_button = new javax.swing.JButton();
        nova_btn = new javax.swing.JButton();
        save_button = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ODKAS - Time &  Money");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TimeNMoney/task_icon.png"))); // NOI18N
        jLabel1.setText("Adicionar Tarefa a Projecto");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("ID Tarefa:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Nome Tarefa:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Descrição Tarefa:");

        id_field.setEnabled(false);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        descricao_field.setColumns(20);
        descricao_field.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        descricao_field.setLineWrap(true);
        descricao_field.setRows(5);
        jScrollPane1.setViewportView(descricao_field);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Tarefas não associadas ao projecto:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Projecto:");

        proj_label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        proj_label.setText("projecto");

        jScrollPane2.setViewportView(lista_tarefas_nao_ass_field);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        cancel_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TimeNMoney/Cancel-icon.png"))); // NOI18N
        cancel_button.setText("Cancelar");
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_buttonActionPerformed(evt);
            }
        });

        nova_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TimeNMoney/new_icon.png"))); // NOI18N
        nova_btn.setText("Nova");
        nova_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nova_btnActionPerformed(evt);
            }
        });

        save_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TimeNMoney/add_task_icon.png"))); // NOI18N
        save_button.setText("Adicionar Tarefa ao Projecto");
        save_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_buttonActionPerformed(evt);
            }
        });
        panel = new JPanel();
        lblCliente = new JLabel("Cliente:");
        lblCliente.setFont(new Font("Tahoma", Font.BOLD, 12));
        client_label = new JLabel("cliente");
        client_label.setFont(new Font("Tahoma", Font.BOLD, 12));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(38)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(nova_btn, GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(cancel_button, GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
        						.addComponent(save_button, GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
        						.addComponent(jSeparator2, GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.LEADING)
        								.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
        									.addComponent(jLabel3, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        									.addComponent(jLabel4, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
        								.addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addGroup(layout.createParallelGroup(Alignment.LEADING)
        								.addComponent(nome_field, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        								.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        								.addComponent(id_field, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))))
        					.addGap(6)
        					.addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 12, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(jLabel5, GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        								.addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
        								.addComponent(panel, GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
        							.addGap(10))))
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(lblCliente, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
        						.addComponent(jLabel6, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(client_label, GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
        						.addComponent(proj_label, GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE))
        					.addContainerGap())))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(28)
        			.addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblCliente)
        				.addComponent(client_label))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(proj_label)
        				.addComponent(jLabel6))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        								.addComponent(jLabel2)
        								.addComponent(id_field, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        							.addGap(18)
        							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        								.addComponent(jLabel3)
        								.addComponent(nome_field, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        							.addGap(18)
        							.addGroup(layout.createParallelGroup(Alignment.LEADING)
        								.addComponent(jLabel4)
        								.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 138, GroupLayout.PREFERRED_SIZE))
        							.addGap(14)
        							.addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(save_button)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        								.addComponent(nova_btn)
        								.addComponent(cancel_button, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)))
        						.addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 328, GroupLayout.PREFERRED_SIZE))
        					.addGap(11))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(jLabel5)
        					.addGap(18)
        					.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 257, Short.MAX_VALUE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(panel, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap())))
        );
        panel.setLayout(null);
        {
        	trf_propria_check = new JCheckBox("Apenas tarefas próprias");
        	trf_propria_check.addActionListener(new ActionListener() {
        		public void actionPerformed(ActionEvent arg0) {
        			trf_proprias_action();
        		}
        	});
        	trf_propria_check.setFont(new Font("Tahoma", Font.BOLD, 11));
        	trf_propria_check.setBounds(6, 7, 249, 23);
        	panel.add(trf_propria_check);
        }
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_buttonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancel_buttonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened

    private void nova_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nova_btnActionPerformed
        nova_btn.setEnabled(false);
        lista_tarefas_nao_ass_field.clearSelection();
        id_field.setText("");
        nome_field.setText("");
        descricao_field.setText("");
        this.novo = true;
        set_id_auto();
    }//GEN-LAST:event_nova_btnActionPerformed

    private void save_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_buttonActionPerformed
        if (this.novo)
            add_nova_tarefa();
        else
            add_tarefa_existente();
        
    }//GEN-LAST:event_save_buttonActionPerformed

    private void add_nova_tarefa(){
        if (id_field.getText().equals("") || nome_field.getText().equals(""))
            JOptionPane.showMessageDialog(null, "Tem que preencher campos de id e nome!");
        else{
            if (confirma_id()==1)
                JOptionPane.showMessageDialog(null,"Já existe uma tarefa com esse nome!");
            else if (confirma_id()==2)
                JOptionPane.showMessageDialog(null,"Já existe uma tarefa com esse id!");
            else
            {
                Tarefa aux = new Tarefa();
                aux.set_id(id_field.getText());
                aux.set_nome(nome_field.getText());
                aux.set_descricao(descricao_field.getText());
                this.dm.get_projectos_user().get(this.proj.get_codigo()).get_tarefas().put(aux.get_nome(), aux);
                this.dm.projectos_alterados.add(proj.get_codigo());
                this.dm.tarefas_adicionadas.add(aux.get_id());
                this.dm.lista_tarefa_total.put(aux.get_id(), aux);
                JOptionPane.showMessageDialog(null,"Tarefa adicionada ao projecto!");
                this.dispose();
            }
        }
    }
    
    private void add_tarefa_existente(){
//        Tarefa aux = this.lista_tarefas_projecto_not.get(id_field.getText());
        Tarefa aux = this.lista_tarefas_projecto_not.get(nome_field.getText());
        this.dm.get_projectos_user().get(this.proj.get_codigo()).get_tarefas().put(aux.get_nome(), aux);
        this.dm.projectos_alterados.add(proj.get_codigo());
        JOptionPane.showMessageDialog(null,"Tarefa adicionada ao projecto!");
        this.dispose();
    }
    
//    private int confirma_id(){
//        if (this.dm.lista_tarefa_total.containsKey(nome_field.getText()))
//            return 1;
//        else
//            for (Tarefa t : this.dm.lista_tarefa_total.values())
//                if (t.get_id().equals(id_field.getText()))
//                    return 2;
//        
//        return 0;
//    }
    
    private int confirma_id(){
        if (this.dm.lista_tarefa_total.containsKey(id_field.getText()))
            return 2;
        else
            for (Tarefa t : this.dm.lista_tarefa_total.values())
                if (t.get_nome().toUpperCase().equals(nome_field.getText().toUpperCase()))
                    return 1;
        
        return 0;
    }
    
    private void trf_proprias_action(){
    	if (!trf_propria_check.isSelected()){
    		set_lista_tarefas();
    	}
    	else{
    		set_lista_tarefas_proprias();
    	}
    }
    
    @SuppressWarnings({ "unchecked", "rawtypes" })
	private void set_lista_tarefas_proprias()
    {
        DefaultListModel dlm = new DefaultListModel();
        for (Tarefa t : this.lista_tarefas_projecto_not.values())
            if (t.get_id().contains("usr"+this.dm.get_id_user_tarefa()))
            	dlm.addElement(t.get_nome());
        this.lista_tarefas_nao_ass_field.setModel(dlm);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel_button;
    private javax.swing.JTextArea descricao_field;
    private javax.swing.JTextField id_field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    @SuppressWarnings("rawtypes")
	private javax.swing.JList lista_tarefas_nao_ass_field;
    private javax.swing.JTextField nome_field;
    private javax.swing.JButton nova_btn;
    private javax.swing.JLabel proj_label;
    private javax.swing.JButton save_button;
    private JPanel panel;
    private JCheckBox trf_propria_check;
    private JLabel lblCliente;
    private JLabel client_label;
}
